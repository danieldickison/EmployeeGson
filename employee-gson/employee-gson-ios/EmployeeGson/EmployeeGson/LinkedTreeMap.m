//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/main/java/com/google/gson/internal/LinkedTreeMap.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "LinkedTreeMap.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Comparable.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/util/AbstractMap.h"
#include "java/util/AbstractSet.h"
#include "java/util/Comparator.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/function/Consumer.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface GsonLinkedTreeMap () {
 @public
  GsonLinkedTreeMap_EntrySet *entrySet_;
  GsonLinkedTreeMap_KeySet *keySet_LinkedTreeMap_;
}

- (jboolean)equalWithId:(id)a
                 withId:(id)b;

- (void)replaceInParentWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)node
                       withGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)replacement;

/*!
 @brief Rebalances the tree by making any AVL rotations necessary between the
  newly-unbalanced node and the tree's root.
 @param insert true if the node was unbalanced by an insert; false if it      was by a removal.
 */
- (void)rebalanceWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)unbalanced
                                withBoolean:(jboolean)insert;

/*!
 @brief Rotates the subtree so that its root's right child is the new root.
 */
- (void)rotateLeftWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)root;

/*!
 @brief Rotates the subtree so that its root's left child is the new root.
 */
- (void)rotateRightWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)root;

/*!
 @brief If somebody is unlucky enough to have to serialize one of these, serialize
  it as a LinkedHashMap so that they won't need Gson on the other side to
  deserialize it.Using serialization defeats our DoS defence, so most apps
  shouldn't use it.
 */
- (id)writeReplace;

@end

J2OBJC_FIELD_SETTER(GsonLinkedTreeMap, entrySet_, GsonLinkedTreeMap_EntrySet *)
J2OBJC_FIELD_SETTER(GsonLinkedTreeMap, keySet_LinkedTreeMap_, GsonLinkedTreeMap_KeySet *)

inline id<JavaUtilComparator> GsonLinkedTreeMap_get_NATURAL_ORDER(void);
static id<JavaUtilComparator> GsonLinkedTreeMap_NATURAL_ORDER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonLinkedTreeMap, NATURAL_ORDER, id<JavaUtilComparator>)

__attribute__((unused)) static jboolean GsonLinkedTreeMap_equalWithId_withId_(GsonLinkedTreeMap *self, id a, id b);

__attribute__((unused)) static void GsonLinkedTreeMap_replaceInParentWithGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(GsonLinkedTreeMap *self, GsonLinkedTreeMap_Node *node, GsonLinkedTreeMap_Node *replacement);

__attribute__((unused)) static void GsonLinkedTreeMap_rebalanceWithGsonLinkedTreeMap_Node_withBoolean_(GsonLinkedTreeMap *self, GsonLinkedTreeMap_Node *unbalanced, jboolean insert);

__attribute__((unused)) static void GsonLinkedTreeMap_rotateLeftWithGsonLinkedTreeMap_Node_(GsonLinkedTreeMap *self, GsonLinkedTreeMap_Node *root);

__attribute__((unused)) static void GsonLinkedTreeMap_rotateRightWithGsonLinkedTreeMap_Node_(GsonLinkedTreeMap *self, GsonLinkedTreeMap_Node *root);

__attribute__((unused)) static id GsonLinkedTreeMap_writeReplace(GsonLinkedTreeMap *self);

@interface GsonLinkedTreeMap_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(id<JavaLangComparable>)a
               withId:(id<JavaLangComparable>)b;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonLinkedTreeMap_1)

__attribute__((unused)) static void GsonLinkedTreeMap_1_init(GsonLinkedTreeMap_1 *self);

__attribute__((unused)) static GsonLinkedTreeMap_1 *new_GsonLinkedTreeMap_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonLinkedTreeMap_1 *create_GsonLinkedTreeMap_1_init(void);

@interface GsonLinkedTreeMap_LinkedTreeMapIterator : NSObject < JavaUtilIterator > {
 @public
  GsonLinkedTreeMap *this$0_;
  GsonLinkedTreeMap_Node *next_;
  GsonLinkedTreeMap_Node *lastReturned_;
  jint expectedModCount_;
}

- (instancetype)initWithGsonLinkedTreeMap:(GsonLinkedTreeMap *)outer$;

- (jboolean)hasNext;

- (GsonLinkedTreeMap_Node *)nextNode;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonLinkedTreeMap_LinkedTreeMapIterator)

J2OBJC_FIELD_SETTER(GsonLinkedTreeMap_LinkedTreeMapIterator, next_, GsonLinkedTreeMap_Node *)
J2OBJC_FIELD_SETTER(GsonLinkedTreeMap_LinkedTreeMapIterator, lastReturned_, GsonLinkedTreeMap_Node *)

__attribute__((unused)) static void GsonLinkedTreeMap_LinkedTreeMapIterator_initWithGsonLinkedTreeMap_(GsonLinkedTreeMap_LinkedTreeMapIterator *self, GsonLinkedTreeMap *outer$);

__attribute__((unused)) static GsonLinkedTreeMap_Node *GsonLinkedTreeMap_LinkedTreeMapIterator_nextNode(GsonLinkedTreeMap_LinkedTreeMapIterator *self);

J2OBJC_TYPE_LITERAL_HEADER(GsonLinkedTreeMap_LinkedTreeMapIterator)

@interface GsonLinkedTreeMap_EntrySet () {
 @public
  GsonLinkedTreeMap *this$0_;
}

@end

@interface GsonLinkedTreeMap_EntrySet_1 : GsonLinkedTreeMap_LinkedTreeMapIterator

- (instancetype)initWithGsonLinkedTreeMap_EntrySet:(GsonLinkedTreeMap_EntrySet *)outer$;

- (id<JavaUtilMap_Entry>)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonLinkedTreeMap_EntrySet_1)

__attribute__((unused)) static void GsonLinkedTreeMap_EntrySet_1_initWithGsonLinkedTreeMap_EntrySet_(GsonLinkedTreeMap_EntrySet_1 *self, GsonLinkedTreeMap_EntrySet *outer$);

__attribute__((unused)) static GsonLinkedTreeMap_EntrySet_1 *new_GsonLinkedTreeMap_EntrySet_1_initWithGsonLinkedTreeMap_EntrySet_(GsonLinkedTreeMap_EntrySet *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonLinkedTreeMap_EntrySet_1 *create_GsonLinkedTreeMap_EntrySet_1_initWithGsonLinkedTreeMap_EntrySet_(GsonLinkedTreeMap_EntrySet *outer$);

@interface GsonLinkedTreeMap_KeySet () {
 @public
  GsonLinkedTreeMap *this$0_;
}

@end

@interface GsonLinkedTreeMap_KeySet_1 : GsonLinkedTreeMap_LinkedTreeMapIterator

- (instancetype)initWithGsonLinkedTreeMap_KeySet:(GsonLinkedTreeMap_KeySet *)outer$;

- (id)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonLinkedTreeMap_KeySet_1)

__attribute__((unused)) static void GsonLinkedTreeMap_KeySet_1_initWithGsonLinkedTreeMap_KeySet_(GsonLinkedTreeMap_KeySet_1 *self, GsonLinkedTreeMap_KeySet *outer$);

__attribute__((unused)) static GsonLinkedTreeMap_KeySet_1 *new_GsonLinkedTreeMap_KeySet_1_initWithGsonLinkedTreeMap_KeySet_(GsonLinkedTreeMap_KeySet *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonLinkedTreeMap_KeySet_1 *create_GsonLinkedTreeMap_KeySet_1_initWithGsonLinkedTreeMap_KeySet_(GsonLinkedTreeMap_KeySet *outer$);

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/employee-gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java"

J2OBJC_INITIALIZED_DEFN(GsonLinkedTreeMap)


#line 38
@implementation GsonLinkedTreeMap

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 58
- (instancetype)init {
  GsonLinkedTreeMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 70
- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  GsonLinkedTreeMap_initWithJavaUtilComparator_(self, comparator);
  return self;
}


#line 77
- (jint)size {
  return size_;
}

- (id)getWithId:(id)key {
  GsonLinkedTreeMap_Node *node = [self findByObjectWithId:key];
  return node != nil ? node->value_ : nil;
}

- (jboolean)containsKeyWithId:(id)key {
  return [self findByObjectWithId:key] != nil;
}

- (id)putWithId:(id)key
         withId:(id)value {
  if (key == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"key == null");
  }
  GsonLinkedTreeMap_Node *created = [self findWithId:key withBoolean:true];
  id result = ((GsonLinkedTreeMap_Node *) nil_chk(created))->value_;
  created->value_ = value;
  return result;
}


#line 100
- (void)clear {
  root_ = nil;
  size_ = 0;
  modCount_++;
  
#line 106
  GsonLinkedTreeMap_Node *header = self->header_;
  ((GsonLinkedTreeMap_Node *) nil_chk(header))->next_ = header->prev_ = header;
}

- (id)removeWithId:(id)key {
  GsonLinkedTreeMap_Node *node = [self removeInternalByKeyWithId:key];
  return node != nil ? node->value_ : nil;
}


#line 121
- (GsonLinkedTreeMap_Node *)findWithId:(id)key
                           withBoolean:(jboolean)create {
  id<JavaUtilComparator> comparator = self->comparator_;
  GsonLinkedTreeMap_Node *nearest = root_;
  jint comparison = 0;
  
#line 126
  if (nearest != nil) {
    
#line 128
    id<JavaLangComparable> comparableKey =
#line 129
    (comparator == GsonLinkedTreeMap_NATURAL_ORDER) ?
#line 130
    (id<JavaLangComparable>) cast_check(key, JavaLangComparable_class_()) :
#line 131
    nil;
    
#line 133
    while (true) {
      comparison = (comparableKey != nil) ?
#line 135
      [comparableKey compareToWithId:nearest->key_] :
#line 136
      [((id<JavaUtilComparator>) nil_chk(comparator)) compareWithId:key withId:nearest->key_];
      
#line 139
      if (comparison == 0) {
        return nearest;
      }
      
#line 144
      GsonLinkedTreeMap_Node *child = (comparison < 0) ? nearest->left_ : nearest->right_;
      if (child == nil) {
        break;
      }
      
#line 149
      nearest = child;
    }
  }
  
#line 154
  if (!create) {
    return nil;
  }
  
#line 159
  GsonLinkedTreeMap_Node *header = self->header_;
  GsonLinkedTreeMap_Node *created;
  if (nearest == nil) {
    
#line 163
    if (comparator == GsonLinkedTreeMap_NATURAL_ORDER && !([JavaLangComparable_class_() isInstance:key])) {
      @throw new_JavaLangClassCastException_initWithNSString_(JreStrcat("$$", [[nil_chk(key) java_getClass] getName], @" is not Comparable"));
    }
    created = new_GsonLinkedTreeMap_Node_initWithGsonLinkedTreeMap_Node_withId_withGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(nearest, key, header, ((GsonLinkedTreeMap_Node *) nil_chk(header))->prev_);
    root_ = created;
  }
  else {
    
#line 169
    created = new_GsonLinkedTreeMap_Node_initWithGsonLinkedTreeMap_Node_withId_withGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(nearest, key, header, ((GsonLinkedTreeMap_Node *) nil_chk(header))->prev_);
    if (comparison < 0) {
      nearest->left_ = created;
    }
    else {
      
#line 173
      nearest->right_ = created;
    }
    GsonLinkedTreeMap_rebalanceWithGsonLinkedTreeMap_Node_withBoolean_(self, nearest, true);
  }
  size_++;
  modCount_++;
  
#line 180
  return created;
}


#line 183
- (GsonLinkedTreeMap_Node *)findByObjectWithId:(id)key {
  
#line 185
  @try {
    return key != nil ? [self findWithId:key withBoolean:false] : nil;
  }
  @catch (
#line 187
  JavaLangClassCastException *e) {
    return nil;
  }
}


#line 201
- (GsonLinkedTreeMap_Node *)findByEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_ {
  GsonLinkedTreeMap_Node *mine = [self findByObjectWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]];
  jboolean valuesEqual = mine != nil && GsonLinkedTreeMap_equalWithId_withId_(self, mine->value_, [entry_ getValue]);
  return valuesEqual ? mine : nil;
}

- (jboolean)equalWithId:(id)a
                 withId:(id)b {
  return GsonLinkedTreeMap_equalWithId_withId_(self, a, b);
}


#line 217
- (void)removeInternalWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)node
                                     withBoolean:(jboolean)unlink {
  if (unlink) {
    ((GsonLinkedTreeMap_Node *) nil_chk(((GsonLinkedTreeMap_Node *) nil_chk(node))->prev_))->next_ = node->next_;
    ((GsonLinkedTreeMap_Node *) nil_chk(node->next_))->prev_ = node->prev_;
  }
  
#line 223
  GsonLinkedTreeMap_Node *left = ((GsonLinkedTreeMap_Node *) nil_chk(node))->left_;
  GsonLinkedTreeMap_Node *right = node->right_;
  GsonLinkedTreeMap_Node *originalParent = node->parent_;
  if (left != nil && right != nil) {
    
#line 237
    GsonLinkedTreeMap_Node *adjacent = (left->height_ > right->height_) ? [left last] : [right first];
    [self removeInternalWithGsonLinkedTreeMap_Node:adjacent withBoolean:false];
    
#line 240
    jint leftHeight = 0;
    left = node->left_;
    if (left != nil) {
      leftHeight = left->height_;
      adjacent->left_ = left;
      left->parent_ = adjacent;
      node->left_ = nil;
    }
    
#line 249
    jint rightHeight = 0;
    right = node->right_;
    if (right != nil) {
      rightHeight = right->height_;
      adjacent->right_ = right;
      right->parent_ = adjacent;
      node->right_ = nil;
    }
    
#line 258
    adjacent->height_ = JavaLangMath_maxWithInt_withInt_(leftHeight, rightHeight) + 1;
    GsonLinkedTreeMap_replaceInParentWithGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(self, node, adjacent);
    return;
  }
  else
#line 261
  if (left != nil) {
    GsonLinkedTreeMap_replaceInParentWithGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(self, node, left);
    node->left_ = nil;
  }
  else
#line 264
  if (right != nil) {
    GsonLinkedTreeMap_replaceInParentWithGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(self, node, right);
    node->right_ = nil;
  }
  else {
    
#line 268
    GsonLinkedTreeMap_replaceInParentWithGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(self, node, nil);
  }
  
#line 271
  GsonLinkedTreeMap_rebalanceWithGsonLinkedTreeMap_Node_withBoolean_(self, originalParent, false);
  size_--;
  modCount_++;
}


#line 276
- (GsonLinkedTreeMap_Node *)removeInternalByKeyWithId:(id)key {
  GsonLinkedTreeMap_Node *node = [self findByObjectWithId:key];
  if (node != nil) {
    [self removeInternalWithGsonLinkedTreeMap_Node:node withBoolean:true];
  }
  return node;
}

- (void)replaceInParentWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)node
                       withGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)replacement {
  GsonLinkedTreeMap_replaceInParentWithGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(self, node, replacement);
}


#line 310
- (void)rebalanceWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)unbalanced
                                withBoolean:(jboolean)insert {
  GsonLinkedTreeMap_rebalanceWithGsonLinkedTreeMap_Node_withBoolean_(self, unbalanced, insert);
}


#line 373
- (void)rotateLeftWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)root {
  GsonLinkedTreeMap_rotateLeftWithGsonLinkedTreeMap_Node_(self, root);
}


#line 401
- (void)rotateRightWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)root {
  GsonLinkedTreeMap_rotateRightWithGsonLinkedTreeMap_Node_(self, root);
}


#line 429
- (id<JavaUtilSet>)entrySet {
  GsonLinkedTreeMap_EntrySet *result = entrySet_;
  return result != nil ? result : (entrySet_ = new_GsonLinkedTreeMap_EntrySet_initWithGsonLinkedTreeMap_(self));
}

- (id<JavaUtilSet>)keySet {
  GsonLinkedTreeMap_KeySet *result = keySet_LinkedTreeMap_;
  return result != nil ? result : (keySet_LinkedTreeMap_ = new_GsonLinkedTreeMap_KeySet_initWithGsonLinkedTreeMap_(self));
}


#line 627
- (id)writeReplace {
  return GsonLinkedTreeMap_writeReplace(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "Z", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, 3, -1, 4, -1, -1 },
    { NULL, "LGsonLinkedTreeMap_Node;", 0x0, 10, 11, -1, 12, -1, -1 },
    { NULL, "LGsonLinkedTreeMap_Node;", 0x0, 13, 3, -1, 14, -1, -1 },
    { NULL, "LGsonLinkedTreeMap_Node;", 0x0, 15, 16, -1, 17, -1, -1 },
    { NULL, "Z", 0x2, 18, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 19, 20, -1, 21, -1, -1 },
    { NULL, "LGsonLinkedTreeMap_Node;", 0x0, 22, 3, -1, 14, -1, -1 },
    { NULL, "V", 0x2, 23, 24, -1, 25, -1, -1 },
    { NULL, "V", 0x2, 26, 20, -1, 21, -1, -1 },
    { NULL, "V", 0x2, 27, 28, -1, 29, -1, -1 },
    { NULL, "V", 0x2, 30, 28, -1, 29, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 31, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 32, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, 33, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilComparator:);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(getWithId:);
  methods[4].selector = @selector(containsKeyWithId:);
  methods[5].selector = @selector(putWithId:withId:);
  methods[6].selector = @selector(clear);
  methods[7].selector = @selector(removeWithId:);
  methods[8].selector = @selector(findWithId:withBoolean:);
  methods[9].selector = @selector(findByObjectWithId:);
  methods[10].selector = @selector(findByEntryWithJavaUtilMap_Entry:);
  methods[11].selector = @selector(equalWithId:withId:);
  methods[12].selector = @selector(removeInternalWithGsonLinkedTreeMap_Node:withBoolean:);
  methods[13].selector = @selector(removeInternalByKeyWithId:);
  methods[14].selector = @selector(replaceInParentWithGsonLinkedTreeMap_Node:withGsonLinkedTreeMap_Node:);
  methods[15].selector = @selector(rebalanceWithGsonLinkedTreeMap_Node:withBoolean:);
  methods[16].selector = @selector(rotateLeftWithGsonLinkedTreeMap_Node:);
  methods[17].selector = @selector(rotateRightWithGsonLinkedTreeMap_Node:);
  methods[18].selector = @selector(entrySet);
  methods[19].selector = @selector(keySet);
  methods[20].selector = @selector(writeReplace);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NATURAL_ORDER", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1a, -1, 34, 35, -1 },
    { "comparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x0, -1, -1, 36, -1 },
    { "root_", "LGsonLinkedTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 37, -1 },
    { "size_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "modCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "header_", "LGsonLinkedTreeMap_Node;", .constantValue.asLong = 0, 0x10, -1, -1, 37, -1 },
    { "entrySet_", "LGsonLinkedTreeMap_EntrySet;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "keySet_LinkedTreeMap_", "LGsonLinkedTreeMap_KeySet;", .constantValue.asLong = 0, 0x2, 38, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilComparator;", "(Ljava/util/Comparator<-TK;>;)V", "get", "LNSObject;", "(Ljava/lang/Object;)TV;", "containsKey", "put", "LNSObject;LNSObject;", "(TK;TV;)TV;", "remove", "find", "LNSObject;Z", "(TK;Z)Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;", "findByObject", "(Ljava/lang/Object;)Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;", "findByEntry", "LJavaUtilMap_Entry;", "(Ljava/util/Map$Entry<**>;)Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;", "equal", "removeInternal", "LGsonLinkedTreeMap_Node;Z", "(Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;Z)V", "removeInternalByKey", "replaceInParent", "LGsonLinkedTreeMap_Node;LGsonLinkedTreeMap_Node;", "(Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;)V", "rebalance", "rotateLeft", "LGsonLinkedTreeMap_Node;", "(Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;)V", "rotateRight", "()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;", "()Ljava/util/Set<TK;>;", "LJavaIoObjectStreamException;", &GsonLinkedTreeMap_NATURAL_ORDER, "Ljava/util/Comparator<Ljava/lang/Comparable;>;", "Ljava/util/Comparator<-TK;>;", "Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;", "keySet", "LGsonLinkedTreeMap_Node;LGsonLinkedTreeMap_LinkedTreeMapIterator;LGsonLinkedTreeMap_EntrySet;LGsonLinkedTreeMap_KeySet;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractMap<TK;TV;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _GsonLinkedTreeMap = { "LinkedTreeMap", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x11, 21, 8, -1, 39, -1, 40, -1 };
  return &_GsonLinkedTreeMap;
}

+ (void)initialize {
  if (self == [GsonLinkedTreeMap class]) {
    GsonLinkedTreeMap_NATURAL_ORDER = new_GsonLinkedTreeMap_1_init();
    J2OBJC_SET_INITIALIZED(GsonLinkedTreeMap)
  }
}

@end


#line 58
void GsonLinkedTreeMap_init(GsonLinkedTreeMap *self) {
  GsonLinkedTreeMap_initWithJavaUtilComparator_(self, GsonLinkedTreeMap_NATURAL_ORDER);
}


#line 58
GsonLinkedTreeMap *new_GsonLinkedTreeMap_init() {
  J2OBJC_NEW_IMPL(GsonLinkedTreeMap, init)
}


#line 58
GsonLinkedTreeMap *create_GsonLinkedTreeMap_init() {
  J2OBJC_CREATE_IMPL(GsonLinkedTreeMap, init)
}


#line 70
void GsonLinkedTreeMap_initWithJavaUtilComparator_(GsonLinkedTreeMap *self, id<JavaUtilComparator> comparator) {
  JavaUtilAbstractMap_init(self);
  self->size_ =
#line 48
  0;
  self->modCount_ = 0;
  self->header_ = new_GsonLinkedTreeMap_Node_init();
  
#line 72
  self->comparator_ = comparator != nil ?
#line 73
  comparator : GsonLinkedTreeMap_NATURAL_ORDER;
}


#line 70
GsonLinkedTreeMap *new_GsonLinkedTreeMap_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  J2OBJC_NEW_IMPL(GsonLinkedTreeMap, initWithJavaUtilComparator_, comparator)
}


#line 70
GsonLinkedTreeMap *create_GsonLinkedTreeMap_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  J2OBJC_CREATE_IMPL(GsonLinkedTreeMap, initWithJavaUtilComparator_, comparator)
}


#line 207
jboolean GsonLinkedTreeMap_equalWithId_withId_(GsonLinkedTreeMap *self, id a, id b) {
  return a == b || (a != nil && [a isEqual:b]);
}


#line 284
void GsonLinkedTreeMap_replaceInParentWithGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(GsonLinkedTreeMap *self, GsonLinkedTreeMap_Node *node, GsonLinkedTreeMap_Node *replacement) {
  GsonLinkedTreeMap_Node *parent = ((GsonLinkedTreeMap_Node *) nil_chk(node))->parent_;
  node->parent_ = nil;
  if (replacement != nil) {
    replacement->parent_ = parent;
  }
  
#line 291
  if (parent != nil) {
    if (parent->left_ == node) {
      parent->left_ = replacement;
    }
    else {
      
#line 295
      JreAssert(parent->right_ == node, @"com/google/gson/internal/LinkedTreeMap.java:295 condition failed: assert (parent.right == node);");
      parent->right_ = replacement;
    }
  }
  else {
    
#line 299
    self->root_ = replacement;
  }
}

void GsonLinkedTreeMap_rebalanceWithGsonLinkedTreeMap_Node_withBoolean_(GsonLinkedTreeMap *self, GsonLinkedTreeMap_Node *unbalanced, jboolean insert) {
  for (GsonLinkedTreeMap_Node *node = unbalanced; node != nil; node = node->parent_) {
    GsonLinkedTreeMap_Node *left = node->left_;
    GsonLinkedTreeMap_Node *right = node->right_;
    jint leftHeight = left != nil ? left->height_ : 0;
    jint rightHeight = right != nil ? right->height_ : 0;
    
#line 317
    jint delta = leftHeight - rightHeight;
    if (delta == -2) {
      GsonLinkedTreeMap_Node *rightLeft = ((GsonLinkedTreeMap_Node *) nil_chk(right))->left_;
      GsonLinkedTreeMap_Node *rightRight = right->right_;
      jint rightRightHeight = rightRight != nil ? rightRight->height_ : 0;
      jint rightLeftHeight = rightLeft != nil ? rightLeft->height_ : 0;
      
#line 324
      jint rightDelta = rightLeftHeight - rightRightHeight;
      if (rightDelta == -1 || (rightDelta == 0 && !insert)) {
        GsonLinkedTreeMap_rotateLeftWithGsonLinkedTreeMap_Node_(self, node);
      }
      else {
        
#line 328
        JreAssert(rightDelta == 1, @"com/google/gson/internal/LinkedTreeMap.java:328 condition failed: assert (rightDelta == 1);");
        GsonLinkedTreeMap_rotateRightWithGsonLinkedTreeMap_Node_(self, right);
        GsonLinkedTreeMap_rotateLeftWithGsonLinkedTreeMap_Node_(self, node);
      }
      if (insert) {
        break;
      }
    }
    else if (delta == 2) {
      GsonLinkedTreeMap_Node *leftLeft = ((GsonLinkedTreeMap_Node *) nil_chk(left))->left_;
      GsonLinkedTreeMap_Node *leftRight = left->right_;
      jint leftRightHeight = leftRight != nil ? leftRight->height_ : 0;
      jint leftLeftHeight = leftLeft != nil ? leftLeft->height_ : 0;
      
#line 342
      jint leftDelta = leftLeftHeight - leftRightHeight;
      if (leftDelta == 1 || (leftDelta == 0 && !insert)) {
        GsonLinkedTreeMap_rotateRightWithGsonLinkedTreeMap_Node_(self, node);
      }
      else {
        
#line 346
        JreAssert(leftDelta == -1, @"com/google/gson/internal/LinkedTreeMap.java:346 condition failed: assert (leftDelta == -1);");
        GsonLinkedTreeMap_rotateLeftWithGsonLinkedTreeMap_Node_(self, left);
        GsonLinkedTreeMap_rotateRightWithGsonLinkedTreeMap_Node_(self, node);
      }
      if (insert) {
        break;
      }
    }
    else if (delta == 0) {
      node->height_ = leftHeight + 1;
      if (insert) {
        break;
      }
    }
    else {
      JreAssert((delta == -1 || delta == 1), @"com/google/gson/internal/LinkedTreeMap.java:361 condition failed: assert (delta == -1 || delta == 1);");
      node->height_ = JavaLangMath_maxWithInt_withInt_(leftHeight, rightHeight) + 1;
      if (!insert) {
        break;
      }
    }
  }
}


#line 373
void GsonLinkedTreeMap_rotateLeftWithGsonLinkedTreeMap_Node_(GsonLinkedTreeMap *self, GsonLinkedTreeMap_Node *root) {
  GsonLinkedTreeMap_Node *left = ((GsonLinkedTreeMap_Node *) nil_chk(root))->left_;
  GsonLinkedTreeMap_Node *pivot = root->right_;
  GsonLinkedTreeMap_Node *pivotLeft = ((GsonLinkedTreeMap_Node *) nil_chk(pivot))->left_;
  GsonLinkedTreeMap_Node *pivotRight = pivot->right_;
  
#line 380
  root->right_ = pivotLeft;
  if (pivotLeft != nil) {
    pivotLeft->parent_ = root;
  }
  
#line 385
  GsonLinkedTreeMap_replaceInParentWithGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(self, root, pivot);
  
#line 388
  pivot->left_ = root;
  root->parent_ = pivot;
  
#line 392
  root->height_ = JavaLangMath_maxWithInt_withInt_(left != nil ? left->height_ : 0,
#line 393
  pivotLeft != nil ? pivotLeft->height_ : 0) + 1;
  pivot->height_ = JavaLangMath_maxWithInt_withInt_(root->height_,
#line 395
  pivotRight != nil ? pivotRight->height_ : 0) + 1;
}

void GsonLinkedTreeMap_rotateRightWithGsonLinkedTreeMap_Node_(GsonLinkedTreeMap *self, GsonLinkedTreeMap_Node *root) {
  GsonLinkedTreeMap_Node *pivot = ((GsonLinkedTreeMap_Node *) nil_chk(root))->left_;
  GsonLinkedTreeMap_Node *right = root->right_;
  GsonLinkedTreeMap_Node *pivotLeft = ((GsonLinkedTreeMap_Node *) nil_chk(pivot))->left_;
  GsonLinkedTreeMap_Node *pivotRight = pivot->right_;
  
#line 408
  root->left_ = pivotRight;
  if (pivotRight != nil) {
    pivotRight->parent_ = root;
  }
  
#line 413
  GsonLinkedTreeMap_replaceInParentWithGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(self, root, pivot);
  
#line 416
  pivot->right_ = root;
  root->parent_ = pivot;
  
#line 420
  root->height_ = JavaLangMath_maxWithInt_withInt_(right != nil ? right->height_ : 0,
#line 421
  pivotRight != nil ? pivotRight->height_ : 0) + 1;
  pivot->height_ = JavaLangMath_maxWithInt_withInt_(root->height_,
#line 423
  pivotLeft != nil ? pivotLeft->height_ : 0) + 1;
}


#line 627
id GsonLinkedTreeMap_writeReplace(GsonLinkedTreeMap *self) {
  return new_JavaUtilLinkedHashMap_initWithJavaUtilMap_(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedTreeMap)

J2OBJC_NAME_MAPPING(GsonLinkedTreeMap, "com.google.gson.internal", "Gson")

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/employee-gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java"


#line 40
@implementation GsonLinkedTreeMap_1

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 40
- (instancetype)init {
  GsonLinkedTreeMap_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 41
- (jint)compareWithId:(id<JavaLangComparable>)a
               withId:(id<JavaLangComparable>)b {
  return [((id<JavaLangComparable>) nil_chk(a)) compareToWithId:b];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LJavaLangComparable;LJavaLangComparable;", "LGsonLinkedTreeMap;", "Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/Comparable;>;" };
  static const J2ObjcClassInfo _GsonLinkedTreeMap_1 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, 3, -1 };
  return &_GsonLinkedTreeMap_1;
}

@end


#line 40
void GsonLinkedTreeMap_1_init(GsonLinkedTreeMap_1 *self) {
  NSObject_init(self);
}


#line 40
GsonLinkedTreeMap_1 *new_GsonLinkedTreeMap_1_init() {
  J2OBJC_NEW_IMPL(GsonLinkedTreeMap_1, init)
}


#line 40
GsonLinkedTreeMap_1 *create_GsonLinkedTreeMap_1_init() {
  J2OBJC_CREATE_IMPL(GsonLinkedTreeMap_1, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/employee-gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java"


#line 439
@implementation GsonLinkedTreeMap_Node

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 450
- (instancetype)init {
  GsonLinkedTreeMap_Node_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)parent
                                        withId:(id)key
                    withGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)next
                    withGsonLinkedTreeMap_Node:(GsonLinkedTreeMap_Node *)prev {
  GsonLinkedTreeMap_Node_initWithGsonLinkedTreeMap_Node_withId_withGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(self, parent, key, next, prev);
  return self;
}


#line 466
- (id)getKey {
  return key_;
}

- (id)getValue {
  return value_;
}

- (id)setValueWithId:(id)value {
  id oldValue = self->value_;
  self->value_ = value;
  return oldValue;
}

- (jboolean)isEqual:(id)o {
  
#line 482
  if ([JavaUtilMap_Entry_class_() isInstance:o]) {
    id<JavaUtilMap_Entry> other = (id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_());
    return (key_ == nil ? [((id<JavaUtilMap_Entry>) nil_chk(other)) getKey] == nil : [key_ isEqual:[((id<JavaUtilMap_Entry>) nil_chk(other)) getKey]]) &&
#line 485
    (value_ == nil ? [other getValue] == nil : [value_ isEqual:[other getValue]]);
  }
  return false;
}


#line 490
- (NSUInteger)hash {
  return (key_ == nil ? 0 : ((jint) [key_ hash])) ^
#line 492
  (value_ == nil ? 0 : ((jint) [value_ hash]));
}


#line 495
- (NSString *)description {
  return JreStrcat("@C@", key_, '=', value_);
}


#line 502
- (GsonLinkedTreeMap_Node *)first {
  GsonLinkedTreeMap_Node *node = self;
  GsonLinkedTreeMap_Node *child = node->left_;
  while (child != nil) {
    node = child;
    child = node->left_;
  }
  return node;
}


#line 515
- (GsonLinkedTreeMap_Node *)last {
  GsonLinkedTreeMap_Node *node = self;
  GsonLinkedTreeMap_Node *child = node->right_;
  while (child != nil) {
    node = child;
    child = node->right_;
  }
  return node;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LGsonLinkedTreeMap_Node;", 0x1, -1, -1, -1, 10, -1, -1 },
    { NULL, "LGsonLinkedTreeMap_Node;", 0x1, -1, -1, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithGsonLinkedTreeMap_Node:withId:withGsonLinkedTreeMap_Node:withGsonLinkedTreeMap_Node:);
  methods[2].selector = @selector(getKey);
  methods[3].selector = @selector(getValue);
  methods[4].selector = @selector(setValueWithId:);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(description);
  methods[8].selector = @selector(first);
  methods[9].selector = @selector(last);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LGsonLinkedTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "left_", "LGsonLinkedTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "right_", "LGsonLinkedTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "next_", "LGsonLinkedTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "prev_", "LGsonLinkedTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "key_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 12, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, 13, -1 },
    { "height_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LGsonLinkedTreeMap_Node;LNSObject;LGsonLinkedTreeMap_Node;LGsonLinkedTreeMap_Node;", "(Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;TK;Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;)V", "()TK;", "()TV;", "setValue", "LNSObject;", "(TV;)TV;", "equals", "hashCode", "toString", "()Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;", "Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;", "TK;", "TV;", "LGsonLinkedTreeMap;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map$Entry<TK;TV;>;" };
  static const J2ObjcClassInfo _GsonLinkedTreeMap_Node = { "Node", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x18, 10, 8, 14, -1, -1, 15, -1 };
  return &_GsonLinkedTreeMap_Node;
}

@end


#line 450
void GsonLinkedTreeMap_Node_init(GsonLinkedTreeMap_Node *self) {
  NSObject_init(self);
  
#line 451
  self->key_ = nil;
  self->next_ = self->prev_ = self;
}


#line 450
GsonLinkedTreeMap_Node *new_GsonLinkedTreeMap_Node_init() {
  J2OBJC_NEW_IMPL(GsonLinkedTreeMap_Node, init)
}


#line 450
GsonLinkedTreeMap_Node *create_GsonLinkedTreeMap_Node_init() {
  J2OBJC_CREATE_IMPL(GsonLinkedTreeMap_Node, init)
}


#line 456
void GsonLinkedTreeMap_Node_initWithGsonLinkedTreeMap_Node_withId_withGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(GsonLinkedTreeMap_Node *self, GsonLinkedTreeMap_Node *parent, id key, GsonLinkedTreeMap_Node *next, GsonLinkedTreeMap_Node *prev) {
  NSObject_init(self);
  
#line 457
  self->parent_ = parent;
  self->key_ = key;
  self->height_ = 1;
  self->next_ = next;
  self->prev_ = prev;
  ((GsonLinkedTreeMap_Node *) nil_chk(prev))->next_ = self;
  ((GsonLinkedTreeMap_Node *) nil_chk(next))->prev_ = self;
}


#line 456
GsonLinkedTreeMap_Node *new_GsonLinkedTreeMap_Node_initWithGsonLinkedTreeMap_Node_withId_withGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(GsonLinkedTreeMap_Node *parent, id key, GsonLinkedTreeMap_Node *next, GsonLinkedTreeMap_Node *prev) {
  J2OBJC_NEW_IMPL(GsonLinkedTreeMap_Node, initWithGsonLinkedTreeMap_Node_withId_withGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_, parent, key, next, prev)
}


#line 456
GsonLinkedTreeMap_Node *create_GsonLinkedTreeMap_Node_initWithGsonLinkedTreeMap_Node_withId_withGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_(GsonLinkedTreeMap_Node *parent, id key, GsonLinkedTreeMap_Node *next, GsonLinkedTreeMap_Node *prev) {
  J2OBJC_CREATE_IMPL(GsonLinkedTreeMap_Node, initWithGsonLinkedTreeMap_Node_withId_withGsonLinkedTreeMap_Node_withGsonLinkedTreeMap_Node_, parent, key, next, prev)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedTreeMap_Node)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/employee-gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java"


#line 526
@implementation GsonLinkedTreeMap_LinkedTreeMapIterator


#line 531
- (instancetype)initWithGsonLinkedTreeMap:(GsonLinkedTreeMap *)outer$ {
  GsonLinkedTreeMap_LinkedTreeMapIterator_initWithGsonLinkedTreeMap_(self, outer$);
  return self;
}


#line 534
- (jboolean)hasNext {
  return next_ != this$0_->header_;
}

- (GsonLinkedTreeMap_Node *)nextNode {
  return GsonLinkedTreeMap_LinkedTreeMapIterator_nextNode(self);
}


#line 550
- (void)remove {
  if (lastReturned_ == nil) {
    @throw new_JavaLangIllegalStateException_init();
  }
  [this$0_ removeInternalWithGsonLinkedTreeMap_Node:lastReturned_ withBoolean:true];
  lastReturned_ = nil;
  expectedModCount_ = this$0_->modCount_;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonLinkedTreeMap_Node;", 0x10, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedTreeMap:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(nextNode);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LGsonLinkedTreeMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "next_", "LGsonLinkedTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
    { "lastReturned_", "LGsonLinkedTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
    { "expectedModCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;", "Lcom/google/gson/internal/LinkedTreeMap<TK;TV;>;", "Lcom/google/gson/internal/LinkedTreeMap$Node<TK;TV;>;", "LGsonLinkedTreeMap;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<TT;>;" };
  static const J2ObjcClassInfo _GsonLinkedTreeMap_LinkedTreeMapIterator = { "LinkedTreeMapIterator", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x402, 4, 4, 3, -1, -1, 4, -1 };
  return &_GsonLinkedTreeMap_LinkedTreeMapIterator;
}

@end


#line 531
void GsonLinkedTreeMap_LinkedTreeMapIterator_initWithGsonLinkedTreeMap_(GsonLinkedTreeMap_LinkedTreeMapIterator *self, GsonLinkedTreeMap *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->next_ =
#line 527
  ((GsonLinkedTreeMap_Node *) nil_chk(outer$->header_))->next_;
  self->lastReturned_ = nil;
  self->expectedModCount_ = outer$->modCount_;
}


#line 538
GsonLinkedTreeMap_Node *GsonLinkedTreeMap_LinkedTreeMapIterator_nextNode(GsonLinkedTreeMap_LinkedTreeMapIterator *self) {
  GsonLinkedTreeMap_Node *e = self->next_;
  if (e == self->this$0_->header_) {
    @throw new_JavaUtilNoSuchElementException_init();
  }
  if (self->this$0_->modCount_ != self->expectedModCount_) {
    @throw new_JavaUtilConcurrentModificationException_init();
  }
  self->next_ = ((GsonLinkedTreeMap_Node *) nil_chk(e))->next_;
  return self->lastReturned_ = e;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedTreeMap_LinkedTreeMapIterator)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/employee-gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java"


#line 560
@implementation GsonLinkedTreeMap_EntrySet


#line 560
- (instancetype)initWithGsonLinkedTreeMap:(GsonLinkedTreeMap *)outer$ {
  GsonLinkedTreeMap_EntrySet_initWithGsonLinkedTreeMap_(self, outer$);
  return self;
}


#line 561
- (jint)size {
  return this$0_->size_;
}

- (id<JavaUtilIterator>)iterator {
  return new_GsonLinkedTreeMap_EntrySet_1_initWithGsonLinkedTreeMap_EntrySet_(self);
}


#line 573
- (jboolean)containsWithId:(id)o {
  return [JavaUtilMap_Entry_class_() isInstance:o] && [this$0_ findByEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_())] != nil;
}

- (jboolean)removeWithId:(id)o {
  if (!([JavaUtilMap_Entry_class_() isInstance:o])) {
    return false;
  }
  
#line 582
  GsonLinkedTreeMap_Node *node = [this$0_ findByEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_())];
  if (node == nil) {
    return false;
  }
  [this$0_ removeInternalWithGsonLinkedTreeMap_Node:node withBoolean:true];
  return true;
}


#line 590
- (void)clear {
  [this$0_ clear];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedTreeMap:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(iterator);
  methods[3].selector = @selector(containsWithId:);
  methods[4].selector = @selector(removeWithId:);
  methods[5].selector = @selector(clear);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LGsonLinkedTreeMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;", "contains", "LNSObject;", "remove", "Lcom/google/gson/internal/LinkedTreeMap<TK;TV;>;", "LGsonLinkedTreeMap;", "Ljava/util/AbstractSet<Ljava/util/Map$Entry<TK;TV;>;>;" };
  static const J2ObjcClassInfo _GsonLinkedTreeMap_EntrySet = { "EntrySet", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x0, 6, 1, 5, -1, -1, 6, -1 };
  return &_GsonLinkedTreeMap_EntrySet;
}

@end


#line 560
void GsonLinkedTreeMap_EntrySet_initWithGsonLinkedTreeMap_(GsonLinkedTreeMap_EntrySet *self, GsonLinkedTreeMap *outer$) {
  self->this$0_ = outer$;
  JavaUtilAbstractSet_init(self);
}


#line 560
GsonLinkedTreeMap_EntrySet *new_GsonLinkedTreeMap_EntrySet_initWithGsonLinkedTreeMap_(GsonLinkedTreeMap *outer$) {
  J2OBJC_NEW_IMPL(GsonLinkedTreeMap_EntrySet, initWithGsonLinkedTreeMap_, outer$)
}


#line 560
GsonLinkedTreeMap_EntrySet *create_GsonLinkedTreeMap_EntrySet_initWithGsonLinkedTreeMap_(GsonLinkedTreeMap *outer$) {
  J2OBJC_CREATE_IMPL(GsonLinkedTreeMap_EntrySet, initWithGsonLinkedTreeMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedTreeMap_EntrySet)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/employee-gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java"


#line 566
@implementation GsonLinkedTreeMap_EntrySet_1


#line 566
- (instancetype)initWithGsonLinkedTreeMap_EntrySet:(GsonLinkedTreeMap_EntrySet *)outer$ {
  GsonLinkedTreeMap_EntrySet_1_initWithGsonLinkedTreeMap_EntrySet_(self, outer$);
  return self;
}


#line 567
- (id<JavaUtilMap_Entry>)next {
  return GsonLinkedTreeMap_LinkedTreeMapIterator_nextNode(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap_Entry;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedTreeMap_EntrySet:);
  methods[1].selector = @selector(next);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map$Entry<TK;TV;>;", "LGsonLinkedTreeMap_EntrySet;", "iterator", "Lcom/google/gson/internal/LinkedTreeMap$LinkedTreeMapIterator<Ljava/util/Map$Entry<TK;TV;>;>;" };
  static const J2ObjcClassInfo _GsonLinkedTreeMap_EntrySet_1 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonLinkedTreeMap_EntrySet_1;
}

@end


#line 566
void GsonLinkedTreeMap_EntrySet_1_initWithGsonLinkedTreeMap_EntrySet_(GsonLinkedTreeMap_EntrySet_1 *self, GsonLinkedTreeMap_EntrySet *outer$) {
  GsonLinkedTreeMap_LinkedTreeMapIterator_initWithGsonLinkedTreeMap_(self, outer$->this$0_);
}


#line 566
GsonLinkedTreeMap_EntrySet_1 *new_GsonLinkedTreeMap_EntrySet_1_initWithGsonLinkedTreeMap_EntrySet_(GsonLinkedTreeMap_EntrySet *outer$) {
  J2OBJC_NEW_IMPL(GsonLinkedTreeMap_EntrySet_1, initWithGsonLinkedTreeMap_EntrySet_, outer$)
}


#line 566
GsonLinkedTreeMap_EntrySet_1 *create_GsonLinkedTreeMap_EntrySet_1_initWithGsonLinkedTreeMap_EntrySet_(GsonLinkedTreeMap_EntrySet *outer$) {
  J2OBJC_CREATE_IMPL(GsonLinkedTreeMap_EntrySet_1, initWithGsonLinkedTreeMap_EntrySet_, outer$)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/employee-gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java"


#line 595
@implementation GsonLinkedTreeMap_KeySet


#line 595
- (instancetype)initWithGsonLinkedTreeMap:(GsonLinkedTreeMap *)outer$ {
  GsonLinkedTreeMap_KeySet_initWithGsonLinkedTreeMap_(self, outer$);
  return self;
}


#line 596
- (jint)size {
  return this$0_->size_;
}

- (id<JavaUtilIterator>)iterator {
  return new_GsonLinkedTreeMap_KeySet_1_initWithGsonLinkedTreeMap_KeySet_(self);
}


#line 608
- (jboolean)containsWithId:(id)o {
  return [this$0_ containsKeyWithId:o];
}

- (jboolean)removeWithId:(id)key {
  return [this$0_ removeInternalByKeyWithId:key] != nil;
}

- (void)clear {
  [this$0_ clear];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedTreeMap:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(iterator);
  methods[3].selector = @selector(containsWithId:);
  methods[4].selector = @selector(removeWithId:);
  methods[5].selector = @selector(clear);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LGsonLinkedTreeMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<TK;>;", "contains", "LNSObject;", "remove", "Lcom/google/gson/internal/LinkedTreeMap<TK;TV;>;", "LGsonLinkedTreeMap;", "Ljava/util/AbstractSet<TK;>;" };
  static const J2ObjcClassInfo _GsonLinkedTreeMap_KeySet = { "KeySet", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x10, 6, 1, 5, -1, -1, 6, -1 };
  return &_GsonLinkedTreeMap_KeySet;
}

@end


#line 595
void GsonLinkedTreeMap_KeySet_initWithGsonLinkedTreeMap_(GsonLinkedTreeMap_KeySet *self, GsonLinkedTreeMap *outer$) {
  self->this$0_ = outer$;
  JavaUtilAbstractSet_init(self);
}


#line 595
GsonLinkedTreeMap_KeySet *new_GsonLinkedTreeMap_KeySet_initWithGsonLinkedTreeMap_(GsonLinkedTreeMap *outer$) {
  J2OBJC_NEW_IMPL(GsonLinkedTreeMap_KeySet, initWithGsonLinkedTreeMap_, outer$)
}


#line 595
GsonLinkedTreeMap_KeySet *create_GsonLinkedTreeMap_KeySet_initWithGsonLinkedTreeMap_(GsonLinkedTreeMap *outer$) {
  J2OBJC_CREATE_IMPL(GsonLinkedTreeMap_KeySet, initWithGsonLinkedTreeMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedTreeMap_KeySet)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/employee-gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java"


#line 601
@implementation GsonLinkedTreeMap_KeySet_1


#line 601
- (instancetype)initWithGsonLinkedTreeMap_KeySet:(GsonLinkedTreeMap_KeySet *)outer$ {
  GsonLinkedTreeMap_KeySet_1_initWithGsonLinkedTreeMap_KeySet_(self, outer$);
  return self;
}


#line 602
- (id)next {
  return ((GsonLinkedTreeMap_Node *) nil_chk(GsonLinkedTreeMap_LinkedTreeMapIterator_nextNode(self)))->key_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedTreeMap_KeySet:);
  methods[1].selector = @selector(next);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TK;", "LGsonLinkedTreeMap_KeySet;", "iterator", "Lcom/google/gson/internal/LinkedTreeMap$LinkedTreeMapIterator<TK;>;" };
  static const J2ObjcClassInfo _GsonLinkedTreeMap_KeySet_1 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonLinkedTreeMap_KeySet_1;
}

@end


#line 601
void GsonLinkedTreeMap_KeySet_1_initWithGsonLinkedTreeMap_KeySet_(GsonLinkedTreeMap_KeySet_1 *self, GsonLinkedTreeMap_KeySet *outer$) {
  GsonLinkedTreeMap_LinkedTreeMapIterator_initWithGsonLinkedTreeMap_(self, outer$->this$0_);
}


#line 601
GsonLinkedTreeMap_KeySet_1 *new_GsonLinkedTreeMap_KeySet_1_initWithGsonLinkedTreeMap_KeySet_(GsonLinkedTreeMap_KeySet *outer$) {
  J2OBJC_NEW_IMPL(GsonLinkedTreeMap_KeySet_1, initWithGsonLinkedTreeMap_KeySet_, outer$)
}


#line 601
GsonLinkedTreeMap_KeySet_1 *create_GsonLinkedTreeMap_KeySet_1_initWithGsonLinkedTreeMap_KeySet_(GsonLinkedTreeMap_KeySet *outer$) {
  J2OBJC_CREATE_IMPL(GsonLinkedTreeMap_KeySet_1, initWithGsonLinkedTreeMap_KeySet_, outer$)
}
